{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mono/Documents/school/CHALMERS/PhD/Courses/Aalto/open_full_stack_development/Exercises/part1/courseinfo/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Part = props => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [props.part, \" \", props.exercises]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Part;\n\nconst Header = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", props.course, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Header;\n\nconst Content = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Part, {\n      part: props.part1.name,\n      exercises: props.part1.exercises\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Part, {\n      part: props.part2.name,\n      exercises: props.part2.exercises\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Part, {\n      part: props.part3.name,\n      exercises: props.part3.exercises\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Content;\n\nconst Total = props => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Number of exercises \", props.total]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = Total;\n\nconst App = () => {\n  // arrow function\n  const course = 'Half Stack application development';\n  part1 = {\n    name: 'Fundamentals of React',\n    exercises: 10\n  };\n  part2 = {\n    name: 'Using props to pass data',\n    exercises: 7\n  };\n  part3 = {\n    name: 'State of a component',\n    exercises: 14\n  };\n  var total_exercises = 0;\n\n  for (let part in course_content) {\n    total_exercises += course_content[part].exercises;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      course: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      part1: part1,\n      part2: part2,\n      part3: part3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      total: part1.exercises + part2.exercises + part3.exercises\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 79,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Part\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"Total\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["/home/mono/Documents/school/CHALMERS/PhD/Courses/Aalto/open_full_stack_development/Exercises/part1/courseinfo/src/index.js"],"names":["React","ReactDOM","Part","props","part","exercises","Header","course","Content","part1","name","part2","part3","Total","total","App","total_exercises","course_content","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,sBACE;AAAA,eACGA,KAAK,CAACC,IADT,OACgBD,KAAK,CAACE,SADtB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAPD;;KAAMH,I;;AASN,MAAMI,MAAM,GAAIH,KAAD,IAAW;AACxB,sBACE;AAAA,2BACE;AAAA,sBAAMA,KAAK,CAACI,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;MAAMD,M;;AAQN,MAAME,OAAO,GAAIL,KAAD,IAAW;AAEzB,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,KAAK,CAACM,KAAN,CAAYC,IAAxB;AAA8B,MAAA,SAAS,EAAEP,KAAK,CAACM,KAAN,CAAYJ;AAArD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEF,KAAK,CAACQ,KAAN,CAAYD,IAAxB;AAA8B,MAAA,SAAS,EAAEP,KAAK,CAACQ,KAAN,CAAYN;AAArD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEF,KAAK,CAACS,KAAN,CAAYF,IAAxB;AAA8B,MAAA,SAAS,EAAEP,KAAK,CAACS,KAAN,CAAYP;AAArD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CATD;;MAAMG,O;;AAWN,MAAMK,KAAK,GAAIV,KAAD,IAAW;AACvB,sBACE;AAAA,uCACqBA,KAAK,CAACW,KAD3B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;MAAMD,K;;AASN,MAAME,GAAG,GAAG,MAAM;AAAE;AAClB,QAAMR,MAAM,GAAG,oCAAf;AACAE,EAAAA,KAAK,GAAG;AACNC,IAAAA,IAAI,EAAG,uBADD;AAENL,IAAAA,SAAS,EAAG;AAFN,GAAR;AAKAM,EAAAA,KAAK,GAAG;AACND,IAAAA,IAAI,EAAG,0BADD;AAENL,IAAAA,SAAS,EAAG;AAFN,GAAR;AAKAO,EAAAA,KAAK,GAAG;AACNF,IAAAA,IAAI,EAAG,sBADD;AAENL,IAAAA,SAAS,EAAG;AAFN,GAAR;AAMA,MAAIW,eAAe,GAAG,CAAtB;;AACA,OAAK,IAAIZ,IAAT,IAAiBa,cAAjB,EAAiC;AAC/BD,IAAAA,eAAe,IAAIC,cAAc,CAACb,IAAD,CAAd,CAAqBC,SAAxC;AACD;;AAGD,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEE;AAAhB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AACE,MAAA,KAAK,EAAEE,KADT;AAEE,MAAA,KAAK,EAAEE,KAFT;AAGE,MAAA,KAAK,EAAEC;AAHT;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEH,KAAK,CAACJ,SAAN,GAAkBM,KAAK,CAACN,SAAxB,GAAoCO,KAAK,CAACP;AAAxD;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAnCD;;MAAMU,G;AAsCNd,QAAQ,CAACiB,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Part = (props) => {\n  return (\n    <p>\n      {props.part} {props.exercises}\n    </p>\n  )\n  \n}\n\nconst Header = (props) => {\n  return (\n    <div>\n      <h1> {props.course} </h1>\n    </div>\n  )\n}\n\nconst Content = (props) => {\n\n  return (\n    <div>\n      <Part part={props.part1.name} exercises={props.part1.exercises} />\n      <Part part={props.part2.name} exercises={props.part2.exercises} />\n      <Part part={props.part3.name} exercises={props.part3.exercises} />\n    </div>\n  )\n}\n\nconst Total = (props) => {\n  return (\n    <p> \n    Number of exercises {props.total} \n    </p>\n  )\n}\n\n\nconst App = () => { // arrow function\n  const course = 'Half Stack application development'\n  part1 = {\n    name : 'Fundamentals of React',\n    exercises : 10\n  }\n\n  part2 = {\n    name : 'Using props to pass data',\n    exercises : 7\n  }\n\n  part3 = {\n    name : 'State of a component',\n    exercises : 14\n  }\n  \n\n  var total_exercises = 0\n  for (let part in course_content) {\n    total_exercises += course_content[part].exercises\n  }\n  \n\n  return (\n    <div>\n      <Header course={course} />\n      <Content \n        part1={part1} \n        part2={part2}\n        part3={part3}  \n      />\n      <Total total={part1.exercises + part2.exercises + part3.exercises} />  \n    </div>\n  )\n}\n\n\nReactDOM.render(<App />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}